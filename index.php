<?php
/*
 * Simple Demo of implementing a portal based authentication
 * with ISE and Duo.
 *
 * This is intended to replace traditional cut-through proxy authentication
 * with a mordern Brower based 2FA authentication that results in SGT based
 * access control on ASA/FTD
 *
 * ISE is configured to authenticate users with the portal as a NAD and assign
 * SGTs on successful 2FA.
 *
 * This code results in a portal that accepts username and password, sends that
 * as a RADIUS request to ISE, then redirects users to Duo for 2FA and finally 
 * sends another RADIUS request to ISE with special attribute to have the SGT
 * assigned.
 *
 * The SGT-IP mapping is sent to ASA using SXP from ISE. SGACLs are used on ASA
 * to filter traffic.
 * 
 */

require_once 'Web.php';


#Change variable values for ISE IP, Shared Secret below

$ip = $_SERVER['REMOTE_ADDR'];
$radserver = '<ISE-IP-ADDRESS>';
$radport = 1812;
$radport2 = 1813;
$sharedsecret = '<shared-secret>';
$auth_type = 'pap';

define('USERNAME', 'demo');
define('PASSWORD', 'letmein');

/*
 * This is something uniquely generated by you for your application
 * and is not shared with Duo.
 */
define('AKEY', "THISISMYSUPERSECRETCUSTOMERKEYDONOTSHARE");

/*
 * IKEY, SKEY, and HOST should come from the Duo Security admin dashboard
 * on the integrations page. For security reasons, these keys are best stored
 * outside of the webroot in a production implementation.
 */
define('IKEY', "I-KEY-FROM-DUO-WebUI");
define('SKEY', "S-KEY-FROM-DUO-WebUI");
define('HOST', "HOST-INFO-FROM-DUO-WebUI");

echo "<html>";
echo '<head>';
echo '<meta http-equiv="X-UA-Compatible" content="IE=edge">';
echo '<meta name="viewport" content="width=device-width, initial-scale=1">';
echo '</head>';
echo "<h1>Authentication Portal</h1>";

/*
 * STEP 3:
 * Once secondary auth has completed you may log in the user
 */
if (isset($_POST['sig_response'])) {
    /*
     * Verify sig response and log in user. Make sure that verifyResponse
     * returns the username we logged in with. You can then set any
     * cookies/session data for that username and complete the login process.
     */
    $resp = Duo\Web::verifyResponse(IKEY, SKEY, AKEY, $_POST['sig_response']);
    if ($resp != "") {
    
	# Send RADIUS Accounting Start for the previous authentication
	$file=fopen("data.txt","r");
	$username=trim(fgets($file));
	$pass=trim(fgets($file));
	$class=trim(fgets($file));
	fclose($file);
	$res2 = radius_acct_open();
	radius_add_server($res2, $radserver, $radport2, $sharedsecret, 5, 2);
	radius_create_request($res2, RADIUS_ACCOUNTING_REQUEST);
	radius_put_attr($res2, RADIUS_USER_NAME, $username);
	radius_put_string($res2, RADIUS_CALLING_STATION_ID, isset($ip) ? $ip : '192.168.1.101');
	radius_put_int($res2, RADIUS_SERVICE_TYPE, 5);
	radius_put_addr($res2, RADIUS_FRAMED_IP_ADDRESS, isset($ip) ? $ip : '192.168.1.101');
	radius_put_addr($res2, RADIUS_NAS_IP_ADDRESS, '192.168.1.6');
	radius_put_int($res2, RADIUS_NAS_PORT_TYPE, 0);
	radius_put_int($res2, RADIUS_ACCT_STATUS_TYPE, RADIUS_START);
	$asessionID = rand(10,500);
	radius_put_string($res2, RADIUS_ACCT_SESSION_ID, $asessionID);
	radius_put_int($res2, RADIUS_ACCT_DELAY_TIME, 0);
	$time = time();
	radius_put_string($res2, RADIUS_CLASS, $class);
	$pos1 = strpos($class, ":");
	$pos1++;
	$pos2 = strpos($class, ":", $pos1);
	$pos2++;
	$len = $pos2-$pos1;
	$sess = "audit-session-id=".substr($class, 5, $len);
	radius_put_vendor_string($res2, 9, 1, $sess);
	$req2 = radius_send_request($res2);
	$file=fopen("data.txt", "w");
	fwrite($file,$username."\n");
	fwrite($file,$class."\n");
	fwrite($file,$sess."\n");
	fwrite($file,$asessionID);
	fclose($file);
	switch($req2) {
		case RADIUS_ACCOUNTING_RESPONSE:
 	         //echo "Radius Accounting response \n";
    		break;

		default:
		//echo "Unexpected return value:$req\n";
	}
	radius_close($res2);

	#Send the second authentication request with duo=security attribute set.
	#ISE should be configured to look for this AV pair before assigning a SGT

	$res3 = radius_auth_open();
        radius_add_server($res3, $radserver, $radport, $sharedsecret, 5, 2);
        radius_create_request($res3, RADIUS_ACCESS_REQUEST);
	radius_put_attr($res3, RADIUS_USER_NAME, $username);
	radius_put_attr($res3, RADIUS_USER_PASSWORD, $pass);
        radius_put_string($res3, RADIUS_CALLING_STATION_ID, isset($ip) ? $ip : '192.168.1.101');
        radius_put_int($res3, RADIUS_SERVICE_TYPE, 5);
        radius_put_addr($res3, RADIUS_FRAMED_IP_ADDRESS, isset($ip) ? $ip : '192.168.1.101');
        radius_put_addr($res3, RADIUS_NAS_IP_ADDRESS, '192.168.1.6');
	radius_put_int($res3, RADIUS_NAS_PORT_TYPE, 0);
	radius_put_string($res3, RADIUS_CLASS, $class);
	radius_put_vendor_string($res3, 9, 1, $sess);
	radius_put_vendor_string($res3, 9, 1, "duo=success"); #Sends a cisco-av-pair=duo=success AV pair
        //Send RADIUS Request
	$req3 = radius_send_request($res3);
        //Parse RADIUS Response
        switch($req3) {
        case RADIUS_ACCESS_REJECT:
                echo "Authentication Failed";
		break;
        default:
		//echo "Unexpected Error";
		echo radius_strerror($res3);
                break;
        case RADIUS_ACCESS_ACCEPT:
        //echo "Radius Request accepted\n";

	echo 'Hi, ' . $resp . '<br/>';
	echo 'Authentication and 2FA Successful<br/>';
	echo "You now have access<br/><br/>";
	echo "<form action='stop.php' method='post'>";
    	echo "<input type='submit' value='Logout' />";
    	echo "</form>";
  	}  
  }
}

/*
 * STEP 2:
 * verify username and password
 * if the user and pass are good, then generate a sig_request and
 * load up the Duo iframe for secondary authentication
 */
else if (isset($_POST['user']) && isset($_POST['pass'])) {
    if ($_POST['user'] != "" && $_POST['pass'] != "") {
        /*
         * Perform primary RADIUS  auth, generate sig request, then load up Duo
         * javascript and iframe.
	 */

	# Send first RADIUS request to ISE
    	$res = radius_auth_open();
	radius_add_server($res, $radserver, $radport, $sharedsecret, 5, 2);
	radius_create_request($res, RADIUS_ACCESS_REQUEST);
	radius_put_attr($res, RADIUS_USER_NAME, $_POST['user']);
	radius_put_attr($res, RADIUS_USER_PASSWORD, $_POST['pass']);
	radius_put_string($res, RADIUS_CALLING_STATION_ID, isset($ip) ? $ip : '192.168.1.101');
	radius_put_int($res, RADIUS_SERVICE_TYPE, 5);
	radius_put_addr($res, RADIUS_FRAMED_IP_ADDRESS, isset($ip) ? $ip : '192.168.1.101');
	radius_put_addr($res, RADIUS_NAS_IP_ADDRESS, '192.168.1.6');
	radius_put_int($res, RADIUS_NAS_PORT_TYPE, 0);
	//Send RADIUS Request
	$req = radius_send_request($res);
        //Parse RADIUS Response
	switch($req) {
	case RADIUS_ACCESS_REJECT:
                echo "Authentication Failed";
		break;
	default:
                echo "Unexpected Error";
                break;
	case RADIUS_ACCESS_ACCEPT:
	# On Accept from ISE, store values in DB and redirect user to Duo
   	while ($resa = radius_get_attr($res)) {
   	$attr = $resa['attr'];
    	$data = $resa['data'];

    	switch ($attr) {
     	case RADIUS_USER_NAME:
     	$name = radius_cvt_string($data);
     	//echo "User Name : $name \n";
    	 break;

     	case RADIUS_STATE:
     	$state = radius_cvt_string($data);
     	//echo "State : $state \n";
     	break;

    	case RADIUS_CLASS:
     	$class = radius_cvt_string($data);
     	//echo "Class: $class \n";
     	break;
	}
	}
	$file=fopen("data.txt", "w");
	fwrite($file,$_POST['user']."\n");
	fwrite($file,$_POST['pass']."\n");
	fwrite($file,$class."\n");
	fclose($file);
	$sig_request = Duo\Web::signRequest(IKEY, SKEY, AKEY, $_POST['user']);
	    ?>
        <script type="text/javascript" src="Duo-Web-v2.js"></script>
        <link rel="stylesheet" type="text/css" href="Duo-Frame.css">
        <iframe id="duo_iframe"
            data-host="<?php echo HOST; ?>"
            data-sig-request="<?php echo $sig_request; ?>"
        ></iframe>
	<?php
	}
    }
}    

/*
 * STEP 1: login form
 * handled exactly as usual
 */
else {
    // Output simple login form
    echo "<form action='index.php' method='post'>";
    echo "Username: <input type='text' name='user' /> <br />";
    echo "Password: <input type='password' name='pass' /> <br />";
    echo "<input type='submit' value='Submit' />";
    echo "</form>";
}

echo "</html>";

?>
